<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>基于Hexo键入搜索功能</title>
      <link href="/2022/%E5%9F%BA%E4%BA%8EHexo%E9%94%AE%E5%85%A5%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/"/>
      <url>/2022/%E5%9F%BA%E4%BA%8EHexo%E9%94%AE%E5%85%A5%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="第一种方法："><a href="#第一种方法：" class="headerlink" title="第一种方法："></a>第一种方法：</h1><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><p>前往博客根目录，打开cmd命令窗口执行npm install hexo-generator-search –save。</p><p><code>npm install hexo-generator-search --save</code></p><h2 id="注入配置"><a href="#注入配置" class="headerlink" title="注入配置"></a>注入配置</h2><p>修改站点配置文件_config.yml，添加如下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  content: true</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="主题中开启搜索"><a href="#主题中开启搜索" class="headerlink" title="主题中开启搜索"></a>主题中开启搜索</h2><p>在主题配置文件_config.butterfly.yml中修改以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line"></span><br><span class="line">-  enable: false</span><br><span class="line"></span><br><span class="line">+  enable: true</span><br></pre></td></tr></table></figure><h2 id="重新编译运行"><a href="#重新编译运行" class="headerlink" title="重新编译运行"></a>重新编译运行</h2><p>前往博客根目录，打开cmd命令窗口依次执行如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo generate</span><br><span class="line">hexo s -p 8000</span><br></pre></td></tr></table></figure><h1 id="第二种方法："><a href="#第二种方法：" class="headerlink" title="第二种方法："></a>第二种方法：</h1><h2 id="注册-Algolia"><a href="#注册-Algolia" class="headerlink" title="注册 Algolia"></a>注册 Algolia</h2><p>进入官网地址 注册，也可以直接用Github授权登录。</p><h2 id="新建-Index"><a href="#新建-Index" class="headerlink" title="新建 Index"></a>新建 Index</h2><h2 id="创建拥有一定权限的api-key"><a href="#创建拥有一定权限的api-key" class="headerlink" title="创建拥有一定权限的api key"></a>创建拥有一定权限的api key</h2><p>进入【Settings &gt; API Keys】</p><p>进入【All API Keys &gt; API Keys】，点击【New API Key】。在ACL里面增加删除和新增Object的权限（按理说只用这两个权限就行，下图中我多加了几个），然后填上 indices 栏目中的 index name ，选刚才你创建的那个index，其余默认就行。</p><p>点击【Create】，这样就得到了一个 api key。注意一下，这个key将会在下面的步骤中用到。</p><p>详细：<a href="https://tzy1997.com/articles/hexo1607/">https://tzy1997.com/articles/hexo1607/</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> Hexo </tag>
            
            <tag> Hexo插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Hexo中发布文章</title>
      <link href="/2022/%E5%9C%A8Hexo%E4%B8%AD%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0/"/>
      <url>/2022/%E5%9C%A8Hexo%E4%B8%AD%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>从本地上传到服务器中<br>首先在本地的站点目录下打开git bash，输入hexo new 文件名，会在_post目录下生成文件名.md文件；或者现在csdn上写好再导出md文件放到_post目录下，再在文件前面加上：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: Hexo博客新建文章并发布</span><br><span class="line">date: 2020-7-21 17:26:44</span><br><span class="line">tags:</span><br></pre></td></tr></table></figure><p>在git bash中输入 hexo g (完整命令为hexo generate)，用于生成静态文件<br>再输入hexo s(完整命令为hexo server)，在本地localhost:4000中预览（这个可以省略）<br>输入hexo d(hexo deploy)发布到git仓库上</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora</title>
      <link href="/2022/Typora%E7%A0%B4%E8%A7%A3/"/>
      <url>/2022/Typora%E7%A0%B4%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h1><p>链接: <a href="https://pan.baidu.com/s/1g-maohCRgCA_dKfoWfy2PQ?pwd=wuwu">https://pan.baidu.com/s/1g-maohCRgCA_dKfoWfy2PQ?pwd=wuwu</a> 提取码: wuwu</p><h1 id="破解方法"><a href="#破解方法" class="headerlink" title="破解方法"></a>破解方法</h1><p>下载最新版Typora</p><p>将winmm.dll放入软件根目录</p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO-Butterfly播放器页面及播放器全局添加</title>
      <link href="/2022/Hexo-Butterfly%E6%92%AD%E6%94%BE%E5%99%A8%E9%A1%B5%E9%9D%A2%E5%8F%8A%E6%92%AD%E6%94%BE%E5%99%A8%E5%85%A8%E5%B1%80%E6%B7%BB%E5%8A%A0/"/>
      <url>/2022/Hexo-Butterfly%E6%92%AD%E6%94%BE%E5%99%A8%E9%A1%B5%E9%9D%A2%E5%8F%8A%E6%92%AD%E6%94%BE%E5%99%A8%E5%85%A8%E5%B1%80%E6%B7%BB%E5%8A%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="插件的安装与配置"><a href="#插件的安装与配置" class="headerlink" title="插件的安装与配置"></a>插件的安装与配置</h1><p>普通界面播放器<br>全局吸底Aplayer模式<br>演示<br>1，普通列表模式<br>2，单曲播放<br>3，迷你模式<br>附录<br>参考链接<br>Aplayer完整配置可选参数表<br>插件的安装与配置<br>安装 hexo-tag-aplayer 这款插件。执行如下指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-tag-aplayer</span><br></pre></td></tr></table></figure><p>插件配置方式为修改Hexo 的配置文件中进行如下修改。就是你的Hexo根目录下的_config.yml文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">aplayer:</span><br><span class="line">  meting: true</span><br><span class="line">  asset_inject: false</span><br></pre></td></tr></table></figure><p>开启主题配置文件中的aplayerInject如下所示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">aplayerInject:</span><br><span class="line">  enable: true</span><br><span class="line">  per_page: true</span><br></pre></td></tr></table></figure><p>主题配置文件的就是自己建立的_config.butterfly.yml文件。建议使用vscode，可以进行全局搜索。更加方便进行修改。<br>至此就已经可以使用了。下面介绍两种最常用的使用。</p><h1 id="普通界面播放器"><a href="#普通界面播放器" class="headerlink" title="普通界面播放器"></a>普通界面播放器</h1><p>以本博客为例，在博客的音乐页面（\source\music\index.md文件）添加如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% meting &quot;7422861869&quot; &quot;netease&quot; &quot;playlist&quot; &quot;autoplay&quot; &quot;mutex:false&quot; &quot;listmaxheight:400px&quot; &quot;preload:none&quot; &quot;theme:#ad7a86&quot;%&#125;</span><br></pre></td></tr></table></figure><p>常用的选项如下所示:<br>server可选：netease（网易云音乐），tencent（QQ音乐），kugou（酷狗音乐），xiami（虾米音乐），baidu（百度音乐）。建议网易云<br>type可选：song（歌曲），playlist（歌单），album（专辑），search（搜索关键字），artist（歌手）。添加单曲选的歌曲，歌单选择playlist，可以自行尝试。<br>id获取示例: 打开网易云音乐，选择喜欢的歌单，在网页版打开，获取歌单list，填入即可。使用的时候将上边的ID号换为自己喜欢的歌单即可。注意歌单中不能包括VIP音乐，否则无法解析。建议单独建立一个歌单，以后有喜欢的音乐添加进去，网页也会自动同步添加。<br>lrcType设置为 -1默认显示歌词，放在fixed模式下比较合适。</p><p>基本上修改的参数以上就已经足够了。ID获取的方式如下。完整的参数表见附录，也可以去参考链接中查看。</p><p>也可以直接添加HTMI格式。<br>需要修改的参数已经给出，可以自行修改。</p><p>全局吸底Aplayer模式<br>把 aplayer代码 插入到主题配置文件的 inject.bottom 即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">  bottom:</span><br><span class="line">    - &lt;div class=&quot;aplayer no-destroy&quot; data-id=&quot;7422861869&quot; data-server=&quot;netease&quot; data-type=&quot;playlist&quot; data-fixed=&quot;true&quot; data-autoplay=&quot;true&quot; data-lrcType=&quot;-1&quot;&gt; &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>需要修改的参数就只有data-id、data-server、data-type、data-autoplay&#x3D;”true”、data-lrcType&#x3D;”-1”一些常用的参数，可以自行根据需要修改。</p><p>最后，如果你想切换页面时，音乐不会中断。请把主题配置文件的 pjax 设为 true即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pjax:</span><br><span class="line"> enable: ture</span><br><span class="line"> exclude:</span><br></pre></td></tr></table></figure><p>演示<br>1，普通列表模式<br>对应代码注意这里将 “listmaxheight:100px”列表高度调整为100，为了方便展示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% meting &quot;7422861869&quot; &quot;netease&quot; &quot;playlist&quot; &quot;autoplay&quot; &quot;mutex:false&quot; &quot;listmaxheight:100px&quot; &quot;preload:none&quot; &quot;autoplay = false&quot; &quot;theme:#ad7a86&quot;%&#125;</span><br><span class="line">1</span><br><span class="line">&#123;% meting “7422861869” “netease” “playlist” “autoplay” “mutex:false” “listmaxheight:100px” “preload:none” “theme:#ad7a86”%&#125;</span><br></pre></td></tr></table></figure><p>2，单曲播放<br>插入单曲使用如下方式</p><div class="aplayer no-destroy" data-id="1441758494" data-server="netease" data-type="song"  data-autoplay="true" data-lrcType="-1"> </div>3，迷你模式<div class="aplayer no-destroy" data-id="1441758494" data-server="netease" data-type="song" data-mini="true" data-autoplay="true" data-lrcType="-1"> </div>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客的安装与部署</title>
      <link href="/2022/Hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%83%A8%E7%BD%B2/"/>
      <url>/2022/Hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>安装Hexo，需要依赖<code>Node.js</code>和<code>Git</code>这两个东西，这里提供了目前在<code>Hexo</code>使用稳定较新的版本，请<strong>先点击下载安装</strong>。</p><ul><li><a href="https://link.jianshu.com/?t=https://nodejs.org/download/release/v6.12.3/win-x64/node.exe">Node.js v6.12.3</a></li><li><a href="https://link.jianshu.com/?t=https://npm.taobao.org/mirrors/git-for-windows/v2.14.3.windows.1/Git-2.14.3-64-bit.exe">Git v2.14.3</a></li></ul><p>安装上边的两个软件之后，接下来在终端命令行执行下边的命令（Windows的CMD窗口）安装<code>Hexo</code></p><blockquote><p>npm install -g hexo-cli</p></blockquote><h4 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h4><p>初始化Hexo工作的目录，你的站点文件也会在这里面：</p><ol><li>先找一个合适的目录</li><li>使用命令行切换到这个目录，可以使用<code>Shift+鼠标右键</code>选择”在此处打开PowerShell窗口”。</li><li><code>hexo init &lt;folder&gt;</code>，将<code>&lt;folder&gt;</code>替换为你要创建的文件夹名称，初始化该目录。<em>约定一下，之后我就用<code>&lt;folder&gt;</code>代表这个你新建的目录了。</em></li><li><code>cd &lt;folder&gt;</code>进入该目录，其实这时候已经可以运行了。但是稳妥起见，还是先执行完下一步。</li><li><code>npm install</code>安装Node的依赖模块，就是文件夹<code>node_modules</code>中的东西，是<code>Hexo</code>的一些依赖模块。</li></ol><p>安装完成以后，先来简单看看这个目录有什么：</p><ol><li><code>_config.yml</code>，这个就是网站的<a href="https://link.jianshu.com/?t=https://hexo.io/zh-cn/docs/configuration.html">配置</a>信息了，网站的标题之类的。以及之后我们要设置主题、设置外网托管(部署)都是在这里。</li><li><code>source</code>，源目录，你的文件就是保存在这里面的，你的主题会根据你的源文件，生成统一样式的界面。</li><li><code>themes</code>，主题。刚安装完<code>Hexo</code>只有一个<code>landspace</code>，这是默认主题。怎么换主题我们之后再说。</li></ol><p>运行一下试试看：</p><blockquote><p>命令行定位到<code>&lt;folder&gt;</code>位置，输入<code>hexo s -g</code>，这个命令的意思是，先(-) 执行 <strong>生成</strong>(g) 再 <strong>启动服务器</strong>(s)。就可以在浏览器打开<code>localhost:4000</code>。</p></blockquote><h2 id="写篇文章"><a href="#写篇文章" class="headerlink" title="写篇文章"></a>写篇文章</h2><p>这里不推荐官方的那种了，说说我平时怎么用的吧。</p><p>还记得之前分析目录时提到的那个<code>source</code>目录么，就是<code>&lt;folder&gt;/source</code>，打开它之后能看到一个<code>_posts</code>目录，打开<code>_posts</code>，我们就在这里面编辑文件（写、改、删）了。</p><p>在这里面，你可以写<code>Markdown</code>、<code>HTML</code>都可以，你的主题会根据你的内容生成样式丰富的文档。但是和一般的<code>Markdown</code>、<code>HTML</code>不一样的是，在文件的开头需要配置一些东西。打开你的<code>Hello-world.md</code>文件看一看，它的开头有这样一些东西。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">World</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>上面的内容就是说，我这篇文章，发布的时候，标题(title)是<code>Hello World</code>。这里注意一个细节，你的文件标题其实是<code>Hello-world</code>。发现了么？它是按照你的配置信息去生成最终文档的。</p><blockquote><p>这里划个重点，不管是修改<code>_config.yml</code>，还是在这里，选项值(<em>比如这里的Hello World</em>)前面 <strong>必须加空格！</strong> 你可以把空格去掉试试看。</p></blockquote><p>贴一个我一般使用的配置项，配置名字、时间、还有多个标签：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">关于Socket</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-01-12 20:11:00</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">计算机网络</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Socket</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">C#</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Python</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>更多详细的配置信息可以查看<a href="https://link.jianshu.com/?t=https://hexo.io/zh-cn/docs/front-matter.html">Hexo文档&#x2F;Front-matter</a>。</p><h2 id="换个主题"><a href="#换个主题" class="headerlink" title="换个主题"></a>换个主题</h2><h6 id="首先，获取NexT主题"><a href="#首先，获取NexT主题" class="headerlink" title="首先，获取NexT主题"></a>首先，获取NexT主题</h6><p>目的是将<code>NexT</code>主题放到<code>&lt;folder&gt;/themes</code>文件夹下，和<code>landscope</code>平级。</p><p>在命令行输入以下指令</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &lt;folder&gt;</span><br><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>现在你的<code>themes</code>文件夹下应该有了一个<code>next</code>文件夹，接下来我们就来使用它。</p><h6 id="接下来，应用NexT主题"><a href="#接下来，应用NexT主题" class="headerlink" title="接下来，应用NexT主题"></a>接下来，应用NexT主题</h6><p>打开<code>&lt;folder&gt;</code>目录下的<code>_config.yml</code>，找到<code>theme: landscope</code>条目，将<code>landscope</code>换成<code>next</code>，即刚才创建的目录名（<em>注意分号后跟空格</em>）。最终就是<code>theme: next</code>这样。</p><p>现在，我们重新生成并启动服务器：</p><blockquote><p>hexo s -g</p></blockquote><h6 id="其他还有butterfly主题"><a href="#其他还有butterfly主题" class="headerlink" title="其他还有butterfly主题"></a>其他还有butterfly主题</h6><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><h2 id="外网访问"><a href="#外网访问" class="headerlink" title="外网访问"></a>外网访问</h2><p><code>github.io</code>是很出名很好的选择，但是在我看来，对大部分人来说<code>coding.me</code>或许是更好的选择。<code>Coding</code>处于国内，网络访问比起<code>Github</code>也要顺畅很多。</p><p>也可以两个一起用，我刚开始就是这样的，但是后来发现使用<code>github.io</code>完全没必要，并且后边如果需要提交站长平台或是做统计，还要做针对性的工作。我就放弃了<code>github.io</code>。另外那种说国外访问<code>github.io</code>，国内访问<code>coding.me</code>，对我来说，国外访问<code>coding.me</code>无非多了几十毫秒的延迟。另外，还有一个小问题，真的有外国人看你的中文博客么……</p><p>所以，我这次就使用<code>Coding</code>做演示，我也建议你使用<code>Coding</code>。如需要使用<code>Github</code>，这一块也可以查一下别的教程。网上已经有大量的<code>Github Pages</code>的内容。</p><h3 id="Coding-Pages"><a href="#Coding-Pages" class="headerlink" title="Coding Pages"></a>Coding Pages</h3><h6 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h6><p>首先，去<a href="https://link.jianshu.com/?t=https://coding.net">Coding</a>注册一个账号。这里需要注意的是起名字，如果之后不打算买域名的话，就要使用<code>&#123;yourname&#125;.coding.me</code>这样的域名了。</p><h6 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h6><p>参考自<a href="https://link.jianshu.com/?t=https://coding.net/pages/">Coding Pages</a></p><ol><li>点击「创建新项目」</li><li>项目起名<code>&#123;yourname&#125;.coding.me</code>，并勾选「使用README.md初始化项目」</li><li>通过仓库中的「Pages 服务」菜单进入设置页面，在部署来源中选择「master 分支」，保存后您的 Pages 已启动运行</li><li>这时打开<code>&#123;yourname&#125;.coding.me</code>，会是404页面，因为仓库里什么都没有。这时如果在仓库根目录添加一个<code>index.html</code>，再次打开网址就是显示的这个页面了。(<em>仓库更新后有延迟，多刷新几遍</em>)。</li></ol><p>这里我们就不用自己去写网页了，我们把自己刚才使用Hexo搭建的网站，想办法搬到<code>&#123;yourname&#125;.coding.me</code>(<em>其实就是放到你的仓库中去</em>)就可以了。称为<code>Hexo部署</code>。</p><h6 id="Hexo部署"><a href="#Hexo部署" class="headerlink" title="Hexo部署"></a>Hexo部署</h6><p>我们先设置一下部署选项，把<code>Coding</code>的信息添加到配置中。还是在那个配置文件里，<code>_config.yml</code></p><p>文件最后面有<code>deploy</code>这一项，如果没做修改的话，它是这样子的</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span></span><br></pre></td></tr></table></figure><p>空空如也，我们做一下修改：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span></span><br><span class="line">     <span class="attr">coding:</span> &#123;<span class="string">address</span>&#125;</span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>把<code>&#123;address&#125;</code>替换成你的仓库地址就可以了。</p><p>修改完毕，保存，接下来我们使用一条命令，生成并<strong>部署</strong>：</p><blockquote><p>hexo d -g</p></blockquote><p>这条命令的意思是：先(-) 执行 生成(g) ，之后执行 <strong>部署</strong>(d)</p><p>如果遇到了这个错误：</p><blockquote><p>ERROR Deployer not found: git</p></blockquote><p>这是因为需要安装一个模块<code>hexo-deployer-git</code>，用于git的部署，需要执行的命令是</p><blockquote><p>npm install hexo-deployer-git –save</p></blockquote><p>安装完毕，我们再尝试部署。</p><p>这次会弹框，让你输入你的账号名和密码。</p><p>都没问题的话最后会显示：</p><blockquote><p>INFO  Deploy done: git</p></blockquote><p>这时，你再去Coding的网站打开你的仓库，就会发现一大堆东西，都是Hexo自动帮你创建的。</p><p>另外，这也就意味着，你可以打开<code>&#123;yourname&#125;.coding.me</code>查看效果了。</p><h2 id="用自己的域名"><a href="#用自己的域名" class="headerlink" title="用自己的域名"></a>用自己的域名</h2><p>域名推荐直接使用CNAME解析，并在根目录下放入CNAME文件</p><p>写入自己的域名。</p><h4 id="关于HTTPS和HTTP"><a href="#关于HTTPS和HTTP" class="headerlink" title="关于HTTPS和HTTP"></a>关于HTTPS和HTTP</h4><p>注意到「Pages 服务」页面有一个「强制HTTPS访问」，建议启用。</p><p>启用后有时候会遇到一个问题，就是如果要引用外站的<strong>非HTTPS</strong>(http)资源(<em>图片什么的</em>)会被拒绝。解决方法就是把这个资源换成HTTPS的，或是资源下载下来，放到仓库中或者图床(<em>专门放置图片的</em>)等地方再使用。</p><h2 id="日常使用流程"><a href="#日常使用流程" class="headerlink" title="日常使用流程"></a>日常使用流程</h2><ol><li>打开<code>&lt;folder&gt;/source/_post</code></li><li>写一个<code>HTML</code>或<code>Markdown</code></li><li>在文本开始的位置前面加上<code>title</code>、<code>tags</code>、<code>date</code>等信息</li><li>回到<code>&lt;folder&gt;</code>目录</li><li>执行<code>hexo s -g</code>，生成并在localhost:4000查看效果。确保没问题，有问题再改。</li><li>执行<code>hexo d</code>部署到云端。</li></ol><h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><p>创建目录和初始化这些东西，刚开始的时候用一次，之后就基本用不到了。</p><p>日常常用的命令大概有这些：</p><blockquote><p><code>hexo g</code> -&gt; 生成<br> <code>hexo s</code> -&gt; 启动本地服务器，可以在localhost:4000来做个预览<br> <code>hexo d</code> -&gt; 部署到云端，可以外网访问</p></blockquote><p>最重要的是我们之前演示过的组合使用：</p><blockquote><p><code>hexo s -g</code> -&gt; 先生成，再启动服务器，用于修改后的预览<br> <code>hexo d -g</code> -&gt; 先生成，再部署到云端</p></blockquote><p>写的比较匆忙，如果有疑问或是建议，非常欢迎告知，我会及时修改。谢谢你的阅读，希望能有所帮助。</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客Butterfly主题配置博客评论邮件提醒</title>
      <link href="/2022/Hexo%E5%8D%9A%E5%AE%A2Butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2%E8%AF%84%E8%AE%BA/"/>
      <url>/2022/Hexo%E5%8D%9A%E5%AE%A2Butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2%E8%AF%84%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="1、为博客配置Valine评论系统"><a href="#1、为博客配置Valine评论系统" class="headerlink" title="1、为博客配置Valine评论系统"></a>1、为博客配置Valine评论系统</h2><p>首先要去LeanCloud官网(<a href="https://www.leancloud.cn/)%E6%B3%A8%E5%86%8C%E4%B8%80%E4%B8%AA%E5%B8%90%E5%8F%B7%EF%BC%8C%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E6%88%90%E5%8A%9F%E5%90%8E,%E5%88%9B%E5%BB%BA%E5%BA%94%E7%94%A8%E3%80%82">https://www.leancloud.cn/)注册一个帐号，账号注册成功后,创建应用。</a></p><p><img src="/fffb738a812409f74ca06f15153e8ee3.png" alt="img/yj1.png"></p><p>创建后拿到APPid和key,填入主题配置文件中。</p><p><img src="/fffb738a812409f74ca06f15153e8ee3.png" alt="img/yj2.png"></p><p><img src="/c490a20d9380e9b39ae9a401de553554.png" alt="img/yj3.png"></p><p>接着将评论显示出来。修改comments下use，添加-Valine</p><p><img src="/8405524d4a65bed717d1c45752ea9a74.png" alt="img/yj4.png"></p><p>最后在learncode安全中心中添加域名白名单</p><p><img src="/0dd39740041eee1d9789df25d74b78c7.png" alt="img/yj5.png"></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客的安装与部署</title>
      <link href="/2022/hexo%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/"/>
      <url>/2022/hexo%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="hexo-abbrlink"><a href="#hexo-abbrlink" class="headerlink" title="hexo-abbrlink"></a>hexo-abbrlink</h3><p>可以把链接permalink转为数字的插件，配置容易，生成时自动转为数字。</p><h3 id="hexo-generator-feed"><a href="#hexo-generator-feed" class="headerlink" title="hexo-generator-feed"></a>hexo-generator-feed</h3><p>生成RSS文件的插件</p><h3 id="hexo-filter-nofollow"><a href="#hexo-filter-nofollow" class="headerlink" title="hexo-filter-nofollow"></a>hexo-filter-nofollow</h3><p>为网站使用到的所有外链添加rel&#x3D;”noopener external nofollow noreferrer”, 可以有效地加强网站SEO和防止权重流失</p><h3 id="hexo-generator-sitemap"><a href="#hexo-generator-sitemap" class="headerlink" title="hexo-generator-sitemap"></a>hexo-generator-sitemap</h3><p>生成sitemap的插件</p><h3 id="hexo-generator-baidu-sitemap"><a href="#hexo-generator-baidu-sitemap" class="headerlink" title="hexo-generator-baidu-sitemap"></a>hexo-generator-baidu-sitemap</h3><p>看名字就知道，是专门为百度生成sitemap的插件</p><h3 id="hexo-admin"><a href="#hexo-admin" class="headerlink" title="hexo-admin"></a>hexo-admin</h3><p>本地后台管理插件，可以设置about等插入页，以及在admin内修改添加日志（Markdown语法）</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
